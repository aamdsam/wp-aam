pipeline {
    agent any
    environment {
        KUBE_CONTEXT = 'your-kube-context'  // Kube context if you have multiple clusters
        KUBERNETES_NAMESPACE = 'default'  // Replace with your namespace
    }

    stages {
        stage('Get Kubernetes Resources') {
            steps {
                script {
                    sh "kubectl describe nodes"
                    sh "kubectl get pvc aam-wp-pvc -n${KUBERNETES_NAMESPACE}"
                    sh "kubectl get pvc aam-wp-pvc -n${KUBERNETES_NAMESPACE}"
                    // sh "kubectl rollout restart deployment aam-wp-deployment -n${KUBERNETES_NAMESPACE}"
                    // sh "kubectl rollout status deployment aam-mysql-deployment -n${KUBERNETES_NAMESPACE}"
                    
                    sh "kubectl get ingress aam-wp-ingress -n ${KUBERNETES_NAMESPACE} -o wide"
                    sh "kubectl get service aam-wp-service -n ${KUBERNETES_NAMESPACE}"
                    sh "kubectl get service aam-mysql-service -n ${KUBERNETES_NAMESPACE}"
                    sh "kubectl get pods -l app=aam-wp-deployment -n${KUBERNETES_NAMESPACE}"
                    
                }
            }
        }

        stage('Exec into Pod and Curl') {
            steps {
                script {
                    def podName = sh(script: "kubectl get pods -l app=aam-wp-deployment -n ${KUBERNETES_NAMESPACE} -o jsonpath='{.items[0].metadata.name}'", returnStdout: true).trim()
                    echo "Executing curl inside pod: ${podName}"
                    sh "kubectl describe pod ${podName} -n ${KUBERNETES_NAMESPACE}"
                    sh "kubectl exec -it ${podName} -n ${KUBERNETES_NAMESPACE} -- curl http://aam-wp-service:80"
                }
            }
        }
    }
}
